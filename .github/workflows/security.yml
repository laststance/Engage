name: Security Scanning

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main
  schedule:
    # Run security scans weekly on Monday at 3 AM UTC
    - cron: '0 3 * * 1'
  workflow_dispatch:

permissions:
  contents: read
  security-events: write
  pull-requests: read

jobs:
  codeql-analysis:
    name: CodeQL Analysis
    runs-on: ubuntu-latest
    timeout-minutes: 20

    strategy:
      fail-fast: false
      matrix:
        language: ['javascript', 'typescript']

    steps:
      - name: Checkout code
        uses: actions/checkout@v5

      - name: Initialize CodeQL
        uses: github/codeql-action/init@v3
        with:
          languages: ${{ matrix.language }}
          queries: security-extended,security-and-quality
          config-file: ./.github/codeql-config.yml

      - name: Autobuild
        uses: github/codeql-action/autobuild@v3

      - name: Perform CodeQL Analysis
        uses: github/codeql-action/analyze@v3
        with:
          category: /language:${{ matrix.language }}

  dependency-review:
    name: Dependency Review
    runs-on: ubuntu-latest
    if: github.event_name == 'pull_request'

    steps:
      - name: Checkout code
        uses: actions/checkout@v5

      - name: Dependency Review
        uses: actions/dependency-review-action@v4
        with:
          fail-on-severity: moderate
          deny-licenses: GPL-3.0, AGPL-3.0
          comment-summary-in-pr: always

  pnpm-audit:
    name: pnpm Audit
    runs-on: ubuntu-latest
    timeout-minutes: 10

    steps:
      - name: Checkout code
        uses: actions/checkout@v5

      - name: Install pnpm
        uses: pnpm/action-setup@v4
        with:
          version: 10

      - name: Setup Node.js
        uses: actions/setup-node@v6
        with:
          node-version: '22.20.0'
          cache: 'pnpm'

      - name: Install dependencies
        run: pnpm install

      - name: Run pnpm audit
        run: |
          # Run audit and capture output
          pnpm audit --audit-level=moderate --json > audit-results.json || true

          # Check for vulnerabilities
          VULNERABILITIES=$(cat audit-results.json | jq '.metadata.vulnerabilities | to_entries | map(select(.value > 0)) | length')

          if [ "$VULNERABILITIES" -gt 0 ]; then
            echo "::warning::Found vulnerabilities in dependencies"
            pnpm audit --audit-level=moderate

            # Fail on high or critical vulnerabilities
            HIGH_CRITICAL=$(cat audit-results.json | jq '.metadata.vulnerabilities.high + .metadata.vulnerabilities.critical')
            if [ "$HIGH_CRITICAL" -gt 0 ]; then
              echo "::error::Found high or critical vulnerabilities"
              exit 1
            fi
          else
            echo "No vulnerabilities found"
          fi

      - name: Upload audit results
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: pnpm-audit-results
          path: audit-results.json
          retention-days: 30

  secret-scanning:
    name: Secret Scanning
    runs-on: ubuntu-latest
    timeout-minutes: 10

    steps:
      - name: Checkout code
        uses: actions/checkout@v5
        with:
          fetch-depth: 0

      - name: TruffleHog Secret Scan
        uses: trufflesecurity/trufflehog@main
        with:
          path: ./
          base: ${{ github.event.repository.default_branch }}
          head: HEAD
          extra_args: --debug --only-verified

  security-summary:
    name: Security Summary
    runs-on: ubuntu-latest
    needs: [codeql-analysis, pnpm-audit, secret-scanning]
    if: always()

    steps:
      - name: Check security scan results
        run: |
          if [ "${{ needs.codeql-analysis.result }}" != "success" ] || \
             [ "${{ needs.pnpm-audit.result }}" != "success" ] || \
             [ "${{ needs.secret-scanning.result }}" != "success" ]; then
            echo "::warning::One or more security scans failed or found issues"
            exit 1
          fi
          echo "All security scans passed successfully!"
